{"version":3,"sources":["webpack:///./src/view/demo/index.js","webpack:///./src/component/screenShot/screenShot.js","webpack:///./src/component/screenShot/screenShot.less?bf70","webpack:///./src/component/screenShot/screenShot.less","webpack:///./src/view/demo/index.less?9322","webpack:///./src/view/demo/index.less"],"names":["Demo","imgSrcList","data","setState","className","styles","wrap","btnWrap","onChange","this","screenShotChangeHandler","imgWrap","state","map","n","i","key","src","width","Array","fill","React","Component","propTypes","ScreenShot","props","optsStyle","visibility","top","left","bgStyle","bgCanvas","refs","canvasRect","getBoundingClientRect","ctx","getContext","clearRect","height","fillStyle","fillRect","html2canvasOpt","then","imgInfoList","html2canvas","content","h2cOption","canvas","push","toDataURL","mouseDowning","mouseDownState","clearRectPoint","bodyNode","document","getElementsByTagName","insertBefore","bgFixed","childNodes","canvasClientRect","addEventListener","e","clientX","clientY","clearRectPointDeal","Math","max","opts","bodyClientRect","querySelector","screenShotOuter","ref","onClick","begin","btnDOM","btn","style","title","confirm","html2canvasContinue","html2canvasDone","cancel","body","PropTypes","object","module","options","transform","undefined","locals","exports"],"mappings":"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","file":"3.bundle.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport ScreenShot from '../../component/screenShot/screenShot'\n// import ScreenShot from 'react-screen-shot'\nimport styles from './index.less'\n\nclass Demo extends React.Component {\n  state = {\n    imgSrcList: [],\n  }\n\n  screenShotChangeHandler = (data) => {\n    this.setState({\n      imgSrcList: data,\n    })\n  }\n\n  render() {\n    return (<div className={styles.wrap}>\n      <div className={styles.btnWrap}>\n        <ScreenShot onChange={this.screenShotChangeHandler}  />\n      </div>\n      <div className={styles.imgWrap}>\n        {\n          this.state.imgSrcList && this.state.imgSrcList.map((n, i) => {\n            return <img key={i} src={n} width={200} />\n          })\n        }\n      </div>\n      {\n        Array(100).fill('').map((n, i) => <h1 key={i}>{i}</h1>)\n      }\n    </div>)\n  }\n}\n\nDemo.propTypes = {}\n\nexport default Demo\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styles from './screenShot.less'\nimport html2canvas from 'html2canvas'\n\n// import html2canvas0 from './html2canvas0.4.1'\n\nclass ScreenShot extends React.Component {\n\n  static defaultProps = {\n    content: document.body,\n    h2cOption: {},\n  }\n\n  state = {\n    optsStyle: {\n      visibility: 'hidden',\n      top: 0,\n      left: 0,\n    },\n    bgStyle: {\n      visibility: 'hidden',\n    },\n  }\n\n  constructor(props) {\n    super(props)\n    this.mouseDowning = false\n    this.mouseDownState = {}\n    this.clearRectPoint = null // 存储拖动位置信息\n    this.imgInfoList = []\n  }\n\n\n  /*\n  * 清空画板->回到待截图状态\n  * */\n  clearRect = (n) => {\n    this.bgCanvas = this.refs.bgCanvas\n    let canvasRect = this.bgCanvas.getBoundingClientRect()\n    let ctx = this.bgCanvas.getContext('2d')\n    ctx.clearRect(0, 0, canvasRect.width, canvasRect.height)\n    ctx.fillStyle = 'rgba(255,255,255,0.5)'\n    ctx.fillRect(0, 0, canvasRect.width, canvasRect.height)\n  }\n\n  /*\n  * 继续截图\n  * */\n  html2canvasContinue = () => {\n    this.setState({\n        optsStyle: {\n          visibility: 'hidden',\n        },\n      }, () => {\n        this.html2canvasOpt()\n      },\n    )\n  }\n\n  /*\n  * 截图完毕\n  *   先隐藏操作按钮\n  *   在隐藏页面\n  *   回调\n  * */\n  html2canvasDone = () => {\n    this.setState({\n        optsStyle: {\n          visibility: 'hidden',\n        },\n      }, () => {\n        this.html2canvasOpt().then(() => {\n          this.props.onChange && this.props.onChange(this.imgInfoList)\n          this.setState({\n            bgStyle: {\n              visibility: 'hidden',\n            },\n          })\n        })\n      },\n    )\n  }\n\n  /*\n  * 执行截屏操作\n  * */\n  html2canvasOpt = () => {\n    return html2canvas(this.props.content, this.props.h2cOption).then((canvas) => {\n      this.imgInfoList.push(canvas.toDataURL())\n      this.props.onChange && this.props.onChange(this.imgInfoList)\n      this.clearRect()\n      return canvas.toDataURL()\n    })\n  }\n\n  /*\n  * 取消此次截图\n  * */\n  cancel = (n) => {\n    this.setState({\n      bgStyle: {\n        visibility: 'hidden',\n      },\n      optsStyle: {\n        visibility: 'hidden',\n      },\n    })\n  }\n\n  /*\n  * 开始截图\n  *   清空画板并显示\n  * */\n  begin = (n) => {\n    this.clearRect()\n    this.setState({\n      bgStyle: {\n        visibility: '',\n      },\n    })\n  }\n\n\n  componentDidMount() {\n    /*\n    * 修复背景错位问题,将背景移动至body层\n    *   jquery实现: $(this.refs.bgFixed).appendTo('body')\n    * */\n    let bodyNode = document.getElementsByTagName('body')[0]\n    bodyNode.insertBefore(this.refs.bgFixed, bodyNode.childNodes[0])\n\n    this.bgCanvas = this.refs.bgCanvas\n    let canvasClientRect = this.bgCanvas.getBoundingClientRect()\n    let ctx = this.bgCanvas.getContext('2d')\n\n    this.bgCanvas.addEventListener('mousemove', (e) => {\n      if (this.mouseDowning) {\n        ctx.clearRect(0, 0, canvasClientRect.width, canvasClientRect.height)\n        ctx.fillStyle = 'rgba(255,255,255,0.5)'\n        ctx.fillRect(0, 0, canvasClientRect.width, canvasClientRect.height)\n        ctx.clearRect(this.mouseDownState.clientX, this.mouseDownState.clientY, e.clientX - this.mouseDownState.clientX, e.clientY - this.mouseDownState.clientY)\n        this.clearRectPoint = [\n          [this.mouseDownState.clientX, e.clientX],\n          [this.mouseDownState.clientY, e.clientY],\n        ]\n      }\n    })\n    this.bgCanvas.addEventListener('mousedown', (e) => {\n      ctx.clearRect(0, 0, canvasClientRect.width, canvasClientRect.height)\n      ctx.fillStyle = 'rgba(255,255,255,0.5)'\n      ctx.fillRect(0, 0, canvasClientRect.width, canvasClientRect.height)\n      this.mouseDowning = true\n      this.mouseDownState = {\n        clientX: e.clientX,\n        clientY: e.clientY,\n      }\n      this.setState({\n        optsStyle: {\n          visibility: 'hidden',\n        },\n      })\n    })\n    this.bgCanvas.addEventListener('mouseup', (e) => {\n      this.mouseDowning = false\n\n      if (this.clearRectPoint) {\n        // 截图操作方向不同,则需要考虑起始结束点的位置坐标值大小\n        let clearRectPointDeal = this.clearRectPoint.map((n) => {\n          return Math.max(...n)\n        })\n        this.setState({\n          optsStyle: {\n            visibility: '',\n            left: clearRectPointDeal[0] - this.refs.opts.getBoundingClientRect().width,\n            top: clearRectPointDeal[1],\n          },\n        })\n        this.clearRectPoint = null // 重置位置信息\n      } else {// 未进行截图拖动鼠标操作 则截屏全部\n        this.setState({\n          optsStyle: {\n            visibility: '',\n            left: this.bgCanvas.getBoundingClientRect().width / 2,\n            top: this.bgCanvas.getBoundingClientRect().height / 2,\n          },\n        })\n      }\n    })\n\n  }\n\n\n  render() {\n    let bodyClientRect = document.querySelector('body').getBoundingClientRect()\n    return (<div className={styles.screenShotOuter} ref={'outer'}>\n      <div className={styles.btnWrap} onClick={this.begin}>\n        {\n          this.props.btnDOM || <div className={styles.btn}>截屏</div>\n        }\n      </div>\n      <div className={styles.bgFixed} style={this.state.bgStyle} ref={'bgFixed'}>\n        <canvas\n          title={'点击并拖动鼠标进行截图操作'}\n          ref={'bgCanvas'}\n          width={`${bodyClientRect.width}px`}\n          height={`${bodyClientRect.height}px`}>\n        </canvas>\n        <div className={styles.opts} style={this.state.optsStyle} ref={'opts'}>\n          <span className={styles.confirm} onClick={this.html2canvasContinue}>继续截图</span>\n          <span className={styles.confirm} onClick={this.html2canvasDone}>完成</span>\n          <span className={styles.cancel} onClick={this.cancel}>取消</span>\n        </div>\n      </div>\n    </div>)\n  }\n}\n\nScreenShot.propTypes = {\n  /*\n  * 需要截屏的区域\n  * */\n  content: PropTypes.object,\n  /*\n  * html2canvas的设置\n  * */\n  h2cOption: PropTypes.object,\n  /*\n  * 触发按钮\n  * */\n  btnDOM: PropTypes.object,\n}\n\nexport default ScreenShot\n","\nvar content = require(\"!!../../../node_modules/css-loader/index.js!../../../node_modules/postcss-loader/lib/index.js??ref--6-2!../../../node_modules/less-loader/dist/cjs.js!./screenShot.less\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../node_modules/css-loader/index.js!../../../node_modules/postcss-loader/lib/index.js??ref--6-2!../../../node_modules/less-loader/dist/cjs.js!./screenShot.less\", function() {\n\t\tvar newContent = require(\"!!../../../node_modules/css-loader/index.js!../../../node_modules/postcss-loader/lib/index.js??ref--6-2!../../../node_modules/less-loader/dist/cjs.js!./screenShot.less\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".screenShotOuter {\\n  background: white;\\n  display: inline-block;\\n}\\n.btnWrap .btn {\\n  padding: 5px 10px;\\n  color: white;\\n  cursor: pointer;\\n  background: #1f9af6;\\n}\\n.bgFixed {\\n  position: fixed;\\n  background: rgba(0, 0, 0, 0.05);\\n  z-index: 999999;\\n}\\n.bgFixed canvas {\\n  cursor: crosshair;\\n}\\n.opts {\\n  position: absolute;\\n  display: flex;\\n  color: white;\\n}\\n.opts > span {\\n  padding: 5px 10px;\\n  cursor: pointer;\\n  margin: 1px;\\n  background: #1f9af6;\\n}\\n\", \"\"]);\n\n// exports\n","\nvar content = require(\"!!../../../node_modules/css-loader/index.js!../../../node_modules/postcss-loader/lib/index.js??ref--6-2!../../../node_modules/less-loader/dist/cjs.js!./index.less\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../node_modules/css-loader/index.js!../../../node_modules/postcss-loader/lib/index.js??ref--6-2!../../../node_modules/less-loader/dist/cjs.js!./index.less\", function() {\n\t\tvar newContent = require(\"!!../../../node_modules/css-loader/index.js!../../../node_modules/postcss-loader/lib/index.js??ref--6-2!../../../node_modules/less-loader/dist/cjs.js!./index.less\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".btnWrap {\\n  position: fixed;\\n  right: 20px;\\n  bottom: 20px;\\n}\\n\", \"\"]);\n\n// exports\n"],"sourceRoot":""}